#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        u {
            bindings = <&kp U>;
            key-positions = <3 4>;
            layers = <0>;
        };

        p {
            bindings = <&kp P>;
            key-positions = <4 5>;
            layers = <0>;
        };

        x {
            bindings = <&kp X>;
            key-positions = <3 4 5>;
            layers = <0>;
        };

        i {
            bindings = <&kp I>;
            key-positions = <10 11>;
            layers = <0>;
        };

        o {
            bindings = <&kp O>;
            key-positions = <11 12>;
            layers = <0>;
        };

        f {
            bindings = <&kp F>;
            key-positions = <2 1>;
            layers = <0>;
        };

        r {
            bindings = <&kp R>;
            key-positions = <1 0>;
            layers = <0>;
        };

        q {
            bindings = <&kp Q>;
            key-positions = <1 0 2>;
            layers = <0>;
        };

        v {
            bindings = <&kp V>;
            key-positions = <9 8>;
            layers = <0>;
        };

        c {
            bindings = <&kp C>;
            key-positions = <7 8>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <0 1>;
            layers = <1>;
        };

        leftbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 1>;
            layers = <1>;
        };

        rightbraket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <3 4>;
            layers = <1>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <4 5>;
            layers = <1>;
        };

        medialayer {
            bindings = <&mo 5>;
            key-positions = <6 13>;
            layers = <0>;
        };

        colon {
            bindings = <&kp SEMICOLON>;
            key-positions = <10 11>;
            layers = <2>;
        };

        quote {
            bindings = <&kp SQT>;
            key-positions = <12 11>;
            layers = <2>;
        };

        z {
            bindings = <&kp Z>;
            key-positions = <7 9>;
        };

        z {
            bindings = <&kp Z>;
            key-positions = <7 9 8>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <10 12>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <10 12 11>;
            layers = <0>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <8 15>;
            layers = <0>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <11 16>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&mt LEFT_SHIFT W  &mt LEFT_CONTROL E  &mt LEFT_ALT T  &mt RIGHT_ALT Y  &mt RIGHT_CONTROL N  &mt RIGHT_SHIFT M  &kp A  &kp S  &kp D  &kp G  &kp H  &kp J  &kp K  &kp L  &mt LEFT_GUI BACKSPACE  &lt 2 SPACE  &lt 1 ENTER  &mt RIGHT_GUI MINUS
            >;
        };

        number_cursor {
            bindings = <
&mt LEFT_SHIFT NUMBER_1  &mt LEFT_CONTROL NUMBER_2  &mt LEFT_ALT NUMBER_3  &mt RIGHT_ALT NUMBER_4  &mt RIGHT_CONTROL N5  &mt RIGHT_SHIFT NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW  &mt LEFT_GUI DELETE  &lt 3 TAB  &trans  &kp RIGHT_GUI
            >;
        };

        function {
            bindings = <
&mt LEFT_SHIFT F1  &mt LEFT_CONTROL F2  &mt LEFT_ALT F3  &mt RIGHT_ALT F4  &mt RIGHT_CONTROL F5  &mt RIGHT_SHIFT F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp PAGE_UP  &kp PAGE_DOWN  &kp HOME  &kp END  &mt LEFT_GUI F11  &trans  &lt 4 ESCAPE  &mt RG(RIGHT_GUI) PLUS
            >;
        };

        mouse {
            bindings = <
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp ALT_ERASE  &none  &msc SCRL_DOWN  &msc SCRL_DOWN  &kp LEFT_GUI  &mkp MB4  &mkp MB3  &mkp MB5  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &trans  &mkp MB1  &mkp MB2
            >;
        };

        ble {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &trans  &bt BT_CLR
            >;
        };

        media {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp K_MUTE  &kp C_VOLUME_UP  &none  &none  &none  &trans  &none
            >;
        };
    };
};
